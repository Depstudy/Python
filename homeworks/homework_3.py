'''
#Задание 1:

#Реализовать функцию, принимающую два числа (позиционные аргументы) и выполняющую их деление.
# Числа запрашивать у пользователя, предусмотреть обработку ситуации деления на ноль.
def my_division(num_1, num_2):
    try:
        result = int(num_1) // int(num_2)
        print(f'{num_1} / {num_2} = {result}')
    except ZeroDivisionError:
        print('Деление на ноль невозможно!')
    except ValueError:
        print('Числа заданны некорректно')


num_1 = input('Введите делимое: ')
num_2 = input('Введите делитель: ')
my_division(num_1, num_2)
#########################################################################################
#Задание 2:

#Реализовать функцию, принимающую несколько параметров, описывающих данные пользователя:
# имя, фамилия, год рождения, город проживания, email, телефон.
# Функция должна принимать параметры как именованные аргументы.
#  Реализовать вывод данных о пользователе одной строкой.


def user_data(name, surname, age, city, email, phone):
    age = 2020 - int(age)
    print(f'Name: {name}| Surname: {surname}| Age: {age}| City: {city}| Email: {email}| Phone: {phone}|')
name = input('Enter your name: ')
surname = input('Enter your surname: ')
age = input('Enter your year of birth: ')
city = input('Enter your city of residence: ')
email = input('Enter your email: ')
phone = input('Enter your phone number: ')
user_data(name, surname, age, city, email, phone)
#########################################################################################
#Задание 3:

#Реализовать функцию my_func(),
# которая принимает три позиционных аргумента,
# и возвращает сумму наибольших двух аргументов.
def my_func(arg_1, arg_2, arg_3):
    try:
        my_list = sorted([int(arg_1), int(arg_2), int(arg_3)], reverse=True)
        result = my_list[0] + my_list[1]
        print(result)
    except ValueError:
        print('Числа введены некорректно!')

num_1 = input('Введите первое число: ')
num_2 = input('Введите второе число: ')
num_3 = input('Введите третье число: ')
my_func(num_1, num_2, num_3)
#########################################################################################
#Задание 4:

#Программа принимает действительное положительное число x и целое отрицательное число y.
# Необходимо выполнить возведение числа x в степень y.
# Задание необходимо реализовать в виде функции my_func(x, y).
# При решении задания необходимо обойтись без встроенной функции возведения числа в степень.
# Подсказка: попробуйте решить задачу двумя способами. Первый — возведение в степень с помощью оператора **.
# Второй — более сложная реализация без оператора **, предусматривающая использование цикла.
#Вариант 1:
# def my_func(x, y):
#     result = x**y
#     print(f'Возведение в степень {y} числа {x} равно: {result}')
#
# num_1 = float(input('Введите положительное число для возведения в степень: '))
# num_2 = int(input('Введите целое отрицательное число степени: '))
# my_func(num_1, num_2)
#########################################################################################
#Задание 5:

#Программа запрашивает у пользователя строку чисел, разделенных пробелом.
# При нажатии Enter должна выводиться сумма чисел.
# Пользователь может продолжить ввод чисел, разделенных пробелом и снова нажать Enter.
# Сумма вновь введенных чисел будет добавляться к уже подсчитанной сумме.
# Но если вместо числа вводится специальный символ, выполнение программы завершается.
# Если специальный символ введен после нескольких чисел,
# то вначале нужно добавить сумму этих чисел к полученной ранее сумме и после этого завершить программу.
numbers = None
result = 0
while numbers != 'q':
    numbers = input('Введите числа или введите \'q\' для выхода: ')
    num_list = numbers.split(' ')
    for elem in num_list:
        try:
            if elem == 'q':
                numbers = elem
                break
            result = result + int(elem)
        except ValueError:
            print('Вы ввели некорректное значение')
    print(f'Сумма введённых вами чисел равна: {result}')
#########################################################################################
#Задание 6:

#Реализовать функцию int_func(),
# принимающую слово из маленьких латинских букв и возвращающую его же, но с прописной первой буквой.
# Например, print(int_func(‘text’)) -> Text.
#Продолжить работу над заданием.
# В программу должна попадать строка из слов, разделенных пробелом.
# Каждое слово состоит из латинских букв в нижнем регистре.
# Сделать вывод исходной строки, но каждое слово должно начинаться с заглавной буквы.
# Необходимо использовать написанную ранее функцию int_func().
def int_func(word):
    word = word.title()
    print(word)
word = input('Введите слово или строку из слов: ')
int_func(word)
'''